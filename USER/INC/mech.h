#ifndef _MECH_H
#define _MECH_H

#include "stm32f4xx.h"
#include "queue.h"
#include "macro.h"
#include "param.h"
#include "stdarg.h"
#include "Tmotor.h"
#include "cylinder.h"
#include "tim3.h"

//????(?????!)
#define UpWheelID 0		//?????VESC
#define DownWheelID 1	//?????VESC
#define PitchID 4   	//????M2006
#define YawID 5     	//????M2006(??)
#define RotateID 7  	//????M2006
#define TmotorID 0   	//????AK80
#define LiftID 2

#define RotateM DJmotor[RotateID]   // ????2006
#define PitchMotor DJmotor[PitchID] // ????,2006
#define YawMotor  DJmotor[YawID]    // ??????,2006

#define UpWheelMotor VESCmotor[UpWheelID] //??????(??????!)
#define DownWheelMotor VESCmotor[DownWheelID]//??????
#define LiftM VESCmotor[LiftID] //??????,??AK

typedef struct//??????????
{
	void (*DJ_Motion) (int ID,float ang);//2006????
	void (*DJ_Zero) (int ID,s16 PosSp);//2006??	
	void (*DJ_SetPosSP) (int ID,s16 PosSp);
} FUNCTypedef;

typedef struct//?????
{ 
	void (*DisableALLFire)(void);	//??????
	void (*EnableALLFire)(void);	//??????
	void (*BrakeALLFire) (void);	//??????
	void (*Set_Yaw_Ang)(CanRxMsg rx_message); //??????
	void (*Set_Yaw_PosSP)(CanRxMsg rx_message); //??????
  void (*Set_Pitch_Ang)(CanRxMsg rx_message);   //??????
  void (*Set_Pitch_PosSP)(CanRxMsg rx_message);   //??????
	void (*Set_Wheel_SP) (CanRxMsg rx_message);//???
} FIRETypedef;

typedef struct//?????
{
	void (*EnableALLCatch)(void);  //???????????
  void (*DisableALLCatch)(void); //????????????
  void (*BrakeALLCatch)(void);	//??
	void (*Set_Rotate_Ang)(CanRxMsg rx_message); //??????
	void (*Set_Rotate_PosSP)(CanRxMsg rx_message); //??????
  void (*Lift_POS)(int flag);   //??????
  void (*Lift_RPM)(int flag);   //??????
} TAKETypedef;

typedef struct//?????
{
	//????
  void (*Answer_PitchAng) (void);//????????
	void (*Answer_YawAng) (void); //????????
	void (*Answer_WheelSP) (void); //?????????
	//????
	void (*Answer_Lift_Pos)(void);//????????
  void (*Answer_Rotate_Ang)(void);//?????????
  void (*Take_Done)(void);//??????
	void (*Lift_Done)(void);
} FEEDBACKTypedef;

typedef struct	//??????
{
    /*************??****************/
	volatile bool REBOOT_Flag;        //??
	volatile u8 reset;                //???????
	
	//???? 
	volatile u8 lift_zero;            //??????
	volatile u8 lift_down_flag;       //??????
	volatile u8 lift_up_flag;         //??????
    volatile u8 lift_loadfinish_flag; //????
    volatile u8 lift_back_flag;       //????
	
	//????
    volatile u8 rotate_zero;          //????
	volatile u8 rotate_turn_flag;     //???????
    volatile u8 rotate_back_flag;     //?????
	
	//???
	volatile u8 test_paw_open;
	volatile u8 test_paw_close;
	
	//??????
	volatile u8 pick_left;
	volatile u8 pick_right;
	volatile u8 pick_behind;
	volatile u8 load;
	volatile u8 pick;
	
	/*************??**************/
	bool ShootFlag;
	
	bool REBOOT;
	int LiftUpDownFlag;
	
	bool YawReachFlag;
	bool PitchReachFlag;
	bool WheelReachFlag;
	
	bool YawZeroFlag;
	bool PitchZeroFlag;
	bool WheelZeroFlag;
	
	bool WheelRelease;
	
	int PitchCnt;
	int YawCnt;
	int WheelCnt;
	
	bool Relation;
	
	int RESET;
	/*************??**************/
	bool Paw_State;//??????
	bool Push_State;//??????
	int Lift_State;
} FLAGTypedef; 
typedef struct _MECHASTRUCT
{
	FIRETypedef fire;//?????
	TAKETypedef take;//?????
	FUNCTypedef FUNC;
	FLAGTypedef FLAG;//???
	FEEDBACKTypedef FDBC;//??
} MechaStruct;

//?????????
typedef struct
{
    /* data */
    //??????(????????)?????(??????)
	//????(??????,????)
    
	int pickangle;
    float Rotate_Pos_Behind; //??????
	float Rotate_Pos_Left;
	float Rotate_Pos_Right;
    u16 Rotate_SP;
    float Return_Pos; //??????
    u16 Return_SP;
	
	//????(????,??????????)
	s16 Turnzero_SP;//??????&??????,????????????????
	s16 Turnpick_SP;//??????
    
	//?????????
	float Fire_Pos;
	u16 Fire_SP;
	
} RotateTypedef;

//?????????
typedef struct
{
    /*??????,????;????,????;
	????,????;???????,???????;
	????,????(????)*/
	float Pick_Pos;      //??????
    u16 Pick_SP;         //?????????
    float Takering_Pos;  //???????
    u16 Takering_SP;     //???????
    float Load_Pos;      //????
    u16 Load_SP;         //????????
	float Normal_Pos;    //????
    u16 Normal_SP;       //?????????
	float Back_Pos;      //????
    u16 Back_SP;         //????
	
	//??????,????
	s16 Liftzero_SP;
} LiftTypedef;

typedef struct
{
	u8 RingNumber;
	float Pitch_Goal;
	float Yaw_Goal;
	float Wheel_Goal;
	float Wheel_Duty_Goal;
	int PushRingNum;

	u8 PitchFeedBacks;
	u8 YawFeedBacks;
	u8 WheeFeedBacks;
	
	float PitchPosSP;
	float YawPosSP;
	
	u8 VESCSP_Thresold;
	float Pitch_Thresold;
	float Yaw_Thresold;
}ARGUMtypedef;//?????2006+??VESC

//????
typedef struct
{
    //??
	float TurnAngle;//????
    float LiftPos;//?????
	//??
	u8 VESCSP_Thresold;
	float Pitch_Thresold;
	float Yaw_Thresold;
} ThresoldTypedef;

typedef struct
{
  RotateTypedef Rotate;//????2006??
  LiftTypedef Lift;//????AK??
	ARGUMtypedef ARGU;//?????
  ThresoldTypedef Thresold;
} TRParamTypedef; 





extern MechaStruct mech;
extern TRParamTypedef TRParm;

#endif
